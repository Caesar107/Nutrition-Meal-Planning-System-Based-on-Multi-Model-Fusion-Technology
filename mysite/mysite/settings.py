"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 初始化配置
env = environ.Env()
# 加载配置问价 
environ.Env.read_env(BASE_DIR / '.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--po+z8lqlr%$ksx$3uskqgwb8!3qip++q=rjxya=t*%%!c1l_v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions', # Django扩展
    'captcha', # 验证码
    'django_tables2', # 表格生成器
    'ckeditor', #富文本编辑器
    'ckeditor_uploader', #富文本编辑器上传图片模块
    'django_bootstrap5',
    # 'ninja', # restful api
    'debug_toolbar', # 调试信息
    'app',
    'user',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware', # debug tool bar
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mysite.context_processors.global_site_name',  # 自定义全局上下文处理器
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# # 配置mysql数据库
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql', # 默认
#         'NAME': 'django_shetuan',  # 连接的数据库
#         'HOST': '127.0.0.1',  # mysql的ip地址
#         'PORT': 3306,  # mysql的端口
#         'USER': 'tianjin',  # mysql的用户名
#         'PASSWORD': 'tianjin',  # mysql的密码
#         'OPTIONS': {
#             'charset': 'utf8mb4'
#         } 
#     }
# }



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static', ]

MEDIA_ROOT = BASE_DIR / 'media'

MEDIA_URL = '/media/'

LOGIN_URL = '/account/login/'

CKEDITOR_UPLOAD_PATH = "ck_img" # 图片上传路径

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# debug tool bar的侦听地址
INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# 系统名称
# SITE_NAME = env('SITE_NAME')
SITE_NAME = '多模型配餐推荐'
ADMIN_SITE_HEADER = SITE_NAME
ADMIN_SITE_TITLE = SITE_NAME

# 把用户加入组
ADD_USER_TO_GROUP = True

# 配置日志
from loguru import logger
#设置主日志文件,所有日志都会记录在此文件中
LOG_FILE_PATH = BASE_DIR / 'runtime.log'
# 添加上面定义好的两个日志文件,并设置格式和级别等信息
logger.add(LOG_FILE_PATH)

import sqlalchemy
def get_dbengine():
    """
    获取数据库引擎
    """
    db_conf = DATABASES.get('default')
    host = db_conf.get('HOST')
    port = db_conf.get('PORT')
    username = db_conf.get('USER')
    password = db_conf.get('PASSWORD')
    db_name = db_conf.get('NAME')

    engine = sqlalchemy.create_engine(f"mysql+pymysql://{username}:{password}@{host}:{port}/{db_name}", echo=False)
    return engine

# GPT Key
ZHIPU_AI_KEY = 'e8f5bd8291fd2c8f8d95e4e2783c5535.A2nRLLgFusbcY37y'

